apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "postgresql.fullname" . }}
  namespace: { { .Release.Namespace | quote } }
  labels:
    { { - include "app.labels" . | nindent 4 } }
  { { - with .Values.deployment.annotations } }
  annotations:
    { { - toYaml . | nindent 4 } }
  { { - end } }
spec:
  serviceName: {{ include "postgresql.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: {{ .Values.postgresql.image }}
          env:
            - name: POSTGRES_USER
              value: { { .Values.postgresql.postgresUser } }
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: postgresql-password
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.postgresDatabase }}
          ports:
            - containerPort: 5432
          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
  volumeClaimTemplates:
    - metadata:
        name: {{ include "postgresql.fullname" . }}
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
